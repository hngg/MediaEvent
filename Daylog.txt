原则：代码精简、架构合理、系统稳定高效、可维护可扩展性强

20211028:
1、添加了远程图片的获取，还没做文件流丢包重传；
2、添加了文件流包收取后标记的位操作函数；
3、下一步：实现视频流和文件流的丢包重传；

20211009:
1、调通接收thumbnail的小图标；
2、下一步点击thumbnail预览照片；

20210930:
1、开始添加文件传输功能；
2、目前rtp传输内存统计：ringbuffer->1500*2048 H264_FRAME_MAX_SIZE(最大帧大小）->256*1024 x 2  resend_buf->1024*1500 resend_len->1024*2;
	如果发送链表打开,还有640*1500字节的内存

20210816:
1、更改视频分包函数为函数寻址模式；
2、下一步，完善丢包重传功能、分包函数优化、udp命令确保收发等功能；

20210422:
1、pjmedia_vid_rtp_unpack结构体和解rtp包后的帧缓冲迁移到RingBuffer结构体；

20210415:
1、调整了jitterbuffer接受包数据的方式；

20210223:
1、重新调整和命名rtp和命令收发的接口;
2、下一步，常用的命令功能;

20210203:
1、添加实时命令收发接口；
2、添加anroid jni实时命令收发和回调接口；

20210130:
1、把rtp和rtcp的创建和销毁分别做了分离，可以独立创建rtcp或rtp；
2、感觉不是很好的地方：发送函数为rtp做了特殊的处理；
3、下一步：命令收发的实现；

20210122:
1、把测试模块从系统中独立成一个test目录；
2、下一步，添加命令收发功能、优化视频帧切包和组帧

20210121:
1、添加了字符串分割函数可以通过key获取value

20210120:
1、修复了rtp包发送的bug（EGAIN）；
2、添加nack的丢包重传功能；


20210115:
1、rtt的计算目前是sr和rr发的小包获取到的时间，有待验证正确性；
2、遗留问题，发送eagain出现时的处理

20210108：
1、更改rtp包发送的方式，先直接sendto，如果出现了EAGAIN就把包存入缓冲链表里面，下次发送时优先发送缓冲链表里面的包
2、下一步添加rtcp的rtt、nack和fir的收发功能


20200608:
当前：完成packed_list的调试
下一步：验证jbuf_opt接口


测试用例：
用make命令生成文件在test目录；
./SEND vid720.h264 发送文件；./RECV 1接收文件，接收生成的文件在同级目录的save.h264
